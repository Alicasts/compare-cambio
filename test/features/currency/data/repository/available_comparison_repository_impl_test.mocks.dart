// Mocks generated by Mockito 5.4.5 from annotations
// in compare_cambio/test/features/currency/data/repository/available_comparison_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:compare_cambio/features/currency/data/dto/available_comparison_dto.dart'
    as _i4;
import 'package:compare_cambio/features/currency/data/services/currency_api_service.dart'
    as _i2;
import 'package:compare_cambio/features/currency/data/storage/local_available_comparison_storage_service.dart'
    as _i5;
import 'package:compare_cambio/features/currency/domain/model/available_comparison.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CurrencyApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCurrencyApiService extends _i1.Mock
    implements _i2.CurrencyApiService {
  MockCurrencyApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.AvailableComparisonDto>> fetchAvailableComparisons() =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAvailableComparisons,
          [],
        ),
        returnValue: _i3.Future<List<_i4.AvailableComparisonDto>>.value(
            <_i4.AvailableComparisonDto>[]),
      ) as _i3.Future<List<_i4.AvailableComparisonDto>>);
}

/// A class which mocks [LocalAvailableComparisonStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalAvailableComparisonStorageService extends _i1.Mock
    implements _i5.LocalAvailableComparisonStorageService {
  MockLocalAvailableComparisonStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveAll(List<_i6.AvailableComparison>? comparisons) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAll,
          [comparisons],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i6.AvailableComparison> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <_i6.AvailableComparison>[],
      ) as List<_i6.AvailableComparison>);

  @override
  _i6.AvailableComparison? getByPairCode(String? pairCode) =>
      (super.noSuchMethod(Invocation.method(
        #getByPairCode,
        [pairCode],
      )) as _i6.AvailableComparison?);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
